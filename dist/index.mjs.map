{"version":3,"file":"index.mjs","sources":["../../../../../../../OneDrive - ForEvolve/Hobbies/RPG/FoundryVTT Data/Data/modules/og-experiments/src/utils.ts","../../../../../../../OneDrive - ForEvolve/Hobbies/RPG/FoundryVTT Data/Data/modules/og-experiments/src/GameExtensions.ts","../../../../../../../OneDrive - ForEvolve/Hobbies/RPG/FoundryVTT Data/Data/modules/og-experiments/src/ActivateScene.ts","../../../../../../../OneDrive - ForEvolve/Hobbies/RPG/FoundryVTT Data/Data/modules/og-experiments/src/OgSettings.ts","../../../../../../../OneDrive - ForEvolve/Hobbies/RPG/FoundryVTT Data/Data/modules/og-experiments/src/OpenSceneNotes.ts","../../../../../../../OneDrive - ForEvolve/Hobbies/RPG/FoundryVTT Data/Data/modules/og-experiments/index.ts"],"sourcesContent":["export function logText(...data: any[]) {\r\n    console.debug('og-experiments |', ...data);\r\n}\r\n","export interface GameExtensions {\r\n    flow: GameFlowExtensions;\r\n}\r\nexport interface GameFlowExtensions {\r\n    activate(targetSceneId: string): Promise<void>;\r\n}\r\nexport const extensions = {\r\n    flow: {\r\n        activate: (targetSceneId: string) => Promise.resolve(),\r\n    },\r\n} as GameExtensions;\r\n","import { extensions } from './GameExtensions';\r\nimport { IOgModule } from './IModule';\r\nimport { logText } from './utils';\r\n\r\nexport class ActivateScene implements IOgModule {\r\n    init(): void {\r\n        logText('ActivateScene initiating');\r\n\r\n        extensions.flow = {\r\n            activate: this.activate,\r\n        };\r\n\r\n        (CONFIG as any).TextEditor.enrichers.push({\r\n            pattern: /@ActivateScene\\[([^\\]]+)\\](?:{([^}]+)})?/gm,\r\n            enricher: (match: any[], options: any) => {\r\n                let [target, name] = match.slice(1, 3);\r\n                var scene = (game as Game).scenes!.get(target);\r\n                let broken = scene ? false : true;\r\n                const data = {\r\n                    name: name,\r\n                    icon: 'fas fa-code',\r\n                    classes: ['content-link'],\r\n                    dataset: {\r\n                        uuid: `ActivateScene.${target}`,\r\n                        id: target,\r\n                        type: 'ActivateScene',\r\n                        tooltip: 'Scene',\r\n                        broken: broken,\r\n                    },\r\n                };\r\n                if (broken) {\r\n                    (data as any).icon = 'fas fa-unlink';\r\n                    data.classes.push('broken');\r\n                    data.name = target;\r\n                }\r\n\r\n                const a = document.createElement('a');\r\n                a.classList.add(...data.classes);\r\n                a.draggable = true;\r\n                for (let [k, v] of Object.entries(data.dataset)) {\r\n                    a.dataset[k] = v;\r\n                }\r\n                a.innerHTML = `<i class=\"${data.icon}\"></i><i class=\"fas fa-map\"></i> ${data.name}`;\r\n                return a;\r\n            },\r\n        });\r\n\r\n        document.addEventListener('click', async (e) => {\r\n            var target = e.target as any;\r\n            if (target && target.dataset && target.dataset.type === 'ActivateScene' && target.dataset.broken === 'false') {\r\n                e.preventDefault();\r\n                await this.activate(target.dataset.id);\r\n            }\r\n        });\r\n\r\n        logText('ActivateScene initiated');\r\n    }\r\n    ready(): void {}\r\n\r\n    async activate(targetSceneId: string) {\r\n        logText(`ActivateScene activating: ${targetSceneId}`);\r\n\r\n        const currentSceneJournal = (game as Game).scenes!.active!.journal;\r\n        if (currentSceneJournal && currentSceneJournal.sheet) {\r\n            currentSceneJournal.sheet.close();\r\n        }\r\n\r\n        const targetScene = (game as Game).scenes!.get(targetSceneId);\r\n        if (targetScene) {\r\n            await targetScene.activate();\r\n            if (targetScene.journal) {\r\n                // await targetScene.journal.show();\r\n                const journal = targetScene.journal;\r\n                if (journal.sheet) {\r\n                    if (!journal.testUserPermission((game as Game).user!, 'LIMITED')) {\r\n                        return ui.notifications!.warn(`You do not have permission to view this ${journal.documentName} sheet.`);\r\n                    }\r\n                    journal.sheet.render(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","export const namespace = 'og-experiments';\r\n","import { IOgModule } from './IModule';\r\nimport { namespace } from './OgSettings';\r\nimport { logText } from './utils';\r\n\r\nexport class OpenSceneNotes implements IOgModule {\r\n    private _openSceneNotes: Boolean = true;\r\n    private _openSceneNotesKey: string = 'openSceneNotes';\r\n\r\n    init(): void {\r\n        logText('OpenSceneNotes initiating');\r\n\r\n        (game as Game).settings.register(namespace, this._openSceneNotesKey, {\r\n            name: 'Auto-open scene notes?',\r\n            hint: 'If enabled, the scene notes of the current scene will open when the server first load.',\r\n            scope: 'client',\r\n            config: true,\r\n            type: Boolean,\r\n            default: this._openSceneNotes,\r\n            onChange: (value) => (this._openSceneNotes = value),\r\n        });\r\n        this.openSceneNotes = (game as Game).settings.get(namespace, this._openSceneNotesKey) as boolean;\r\n\r\n        logText('OpenSceneNotes initiated');\r\n    }\r\n    ready(): void {\r\n        logText('OpenSceneNotes is getting ready');\r\n        if (this.openSceneNotes) {\r\n            const currentSceneJournal = (game as Game).scenes!.active!.journal;\r\n            if (currentSceneJournal && currentSceneJournal.sheet) {\r\n                currentSceneJournal.sheet.render(true);\r\n            }\r\n        }\r\n        logText('OpenSceneNotes is ready');\r\n    }\r\n\r\n    public get openSceneNotes() {\r\n        return this._openSceneNotes;\r\n    }\r\n\r\n    public set openSceneNotes(value: Boolean) {\r\n        this._openSceneNotes = value;\r\n        (game as Game).settings.set(namespace, this._openSceneNotesKey, value);\r\n    }\r\n}\r\n","import './styles/module.scss';\r\nimport { logText } from './src/utils';\r\nimport { ServerPush } from './src/server-push';\r\nimport { IOgModule } from './src/IModule';\r\nimport { ActivateScene } from './src/ActivateScene';\r\nimport { extensions } from './src/GameExtensions';\r\nimport { OpenSceneNotes } from './src/OpenSceneNotes';\r\n\r\nconst modules = [\r\n    // extensions.settings,\r\n    new ActivateScene(),\r\n    new OpenSceneNotes(),\r\n    /*, new ServerPush()*/\r\n    /*, new VehicleMovement(),*/\r\n] as IOgModule[];\r\n\r\nHooks.once('init', async function () {\r\n    logText('initiating');\r\n\r\n    for (let index = 0; index < modules.length; index++) {\r\n        const module = modules[index];\r\n        if (module.init) {\r\n            module.init();\r\n        }\r\n    }\r\n\r\n    (game as any)['og'] = extensions;\r\n\r\n    logText('initiated');\r\n});\r\n\r\nHooks.once('ready', async function () {\r\n    logText('readying');\r\n    for (let index = 0; index < modules.length; index++) {\r\n        const module = modules[index];\r\n        if (module.ready) {\r\n            module.ready();\r\n        }\r\n    }\r\n    logText('ready');\r\n});\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    if ((module as any).hot) {\r\n        (module as any).hot.accept();\r\n\r\n        if ((module as any).hot.status() === 'apply') {\r\n            for (const template in _templateCache) {\r\n                if (Object.prototype.hasOwnProperty.call(_templateCache, template)) {\r\n                    delete _templateCache[template];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"names":["logText","data","extensions","targetSceneId","ActivateScene","match","options","target","name","scene","broken","a","k","v","currentSceneJournal","targetScene","journal","namespace","OpenSceneNotes","__publicField","value","modules","index","module","template"],"mappings":"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"}